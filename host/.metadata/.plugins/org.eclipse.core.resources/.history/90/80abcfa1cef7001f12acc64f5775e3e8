/*
 * main.c
 *
 *  Created on: Mar 2, 2025
 *      Author: mauricewashington
 */


#include <stdint.h>
#include <stdio.h>

struct DataSet{
	char data1;
	int data2;
	char data3;
	short data4;
};

struct DataPacked{
	char data5;
	int data6;
	char data7;
	short data8;
}__attribute__((packed)); //do not consider byte width when assigning values to memory locations

typedef struct{
	char data1;
	int data2;
	char data3;
	short data4;
}DATASET2_t;

int main(){
	struct DataSet data;

	data.data1 = 0x11;
	data.data2 = 0xFFFFEEEE;
	data.data3 = 0x22;
	data.data4 = 0xABCD;

	uint8_t *ptr = (unint8_t*)&data;

	//modify first element
	*ptr = 0x55;

	//modify second element
	// tedious using above method

	//instead make pointer of struct type
	struct DataSet *pData;

	//pData now holds the address of structire variable data
	pData = &data;

	//changing the value of data1 member element
	pData->data1 = 0x55;

	uint8_t *ptr;
	ptr = (uint8_t*)&data;

	uint32_t totalSize = sizeof(struct DataSet);

	printf("Memory address            Content\n");
	printf("===================================\n");

	for (uint32_t i = 0; i < totalSize; i++){
		printf("%p , %X\n", ptr, *ptr);
		ptr++;
	}


	printf("Total memory consumed by this struct variable is %d\n", totalSize);


	getchar();





}
