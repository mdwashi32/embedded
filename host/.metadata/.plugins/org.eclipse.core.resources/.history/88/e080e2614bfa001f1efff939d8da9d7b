/*
 * main.c
 *
 *  Created on: Mar 5, 2025
 *      Author: mauricewashington
 */

#include <stdio.h>
#include <stdint.h>
#include "student.h"

int main() {

	uint8_t choice = 0;
	STUDENT_INFO_t studentRecords[10];
	uint8_t recordLength = sizeof(studentRecords)/sizeof(studentRecords[0]);
	uint8_t count = 0;
	uint8_t isDuplicate = 0;
	uint8_t deletion = 0;

	for(int i = 0; i < recordLength; i++){
		//studentRecords[i].name = "XXXXXXX";
		studentRecords[i].rollNumber = 0;
		//studentRecords[i].branch = "XXXXXXX";
		//studentRecords[i].dob = "XXXXXXX";
		studentRecords[i].semester = 0;

	}


	printf("Student Record Management Program\n");
	do{
		printf("==============================\n");
		printf("Display all records --->1\n");
		printf("Add a new record    --->2\n");
		printf("Delete a record     --->3\n");
		printf("Exit application --->0\n");
		printf("Please select an option:\n\n");

		scanf(" %u",&choice);

		switch(choice){
			case 1:
				printf("Displaying student records:\n\n");
				if (studentRecords[0].rollNumber == 0){
					printf("Sorry, no students have been added yet.\n\n");
					break;
				}
				else{
					for (int i = 0; i < recordLength; i++){
						if(studentRecords[i].rollNumber != 0){
							printf("==============================\n");
							printf("Student #%u\n",studentRecords[i].rollNumber);
							printf("Name: %s\n",studentRecords[i].name);
							printf("Department: %s\n",studentRecords[i].branch);
							printf("Date of Birth: %s\n",studentRecords[i].dob);
							printf("Semester: %u\n",studentRecords[i].semester);
							printf("==============================\n\n");
						}
					}
				}
				break;

			case 2:
				isDuplicate = 0;

				if(count >= recordLength){
					printf("Sorry, no more room for new students\n\n");
					break;
				}
				printf("Please input new student record:\n");
				printf("Student #, Name, Department, Date of Birth, Semester (enter after each value):\n");
				scanf(" %u", &studentRecords[count].rollNumber);
				for(int i = 0; i < recordLength; i++){
									if (count == 0){
										break;
									}

									if(studentRecords[count].rollNumber == studentRecords[i].rollNumber){
										if (count != i){
											isDuplicate = 1;
											break;
										}
									}
								}

								if(isDuplicate == 1){
									studentRecords[count].rollNumber = 0;
									printf("Sorry, no duplicates allowed\n\n");
									break;
								}

				scanf(" %[^\n]s", studentRecords[count].name);
				scanf(" %[^\n]s", studentRecords[count].branch);
				scanf(" %[^\n]s", studentRecords[count].dob);
				scanf(" %u", &studentRecords[count].semester);

				count++;
				printf("Student added successfully\n\n");
				break;

//			case 3:
//				printf("Count is currently %u\n",count);
//				printf("Please input a student record to delete:\n");
//				printf("Count is currently %u\n",count);
//
//				while (getchar() != '\n');
//				scanf("%u", &deletion);
//
//				printf("Count is currently %u\n",count);
//
//				if (count == 0){
//					printf("Nothing to delete\n\n");
//					break;
//				}
//
//				for(int i = 0; i < recordLength; i++){
//					printf("In deletion loop");
//					if(deletion == studentRecords[i].rollNumber){
//						//studentRecords[i].name = "XXXXXXX";
//						studentRecords[i].rollNumber = 0;
//						//studentRecords[i].branch = "XXXXXXX";
//						//studentRecords[i].dob = "XXXXXXX";
//						studentRecords[i].semester = 0;
//						count--;
//						printf("%u",count);
//						break;
//					}
//					else printf("Input does not match student\n\n");
//				}
//				break;
			case 3:
			    printf("Count is currently %u\n", count);
			    printf("Please input a student record to delete:\n");
			    printf("Count is currently %u\n", count);

			    // Clear any leftover newline character in the input buffer
			    while (getchar() != '\n');  // This clears the buffer, making sure there's no leftover newline

			    // Now safely read the deletion number
			    scanf("%u", &deletion);

			    printf("Count is currently %u\n", count);

			    if (count == 0) {
			        printf("Nothing to delete\n\n");
			        break;
			    }

			    int deleted = 0;  // Flag to track if deletion occurred

			    // Search for the student record to delete
			    for (int i = 0; i < recordLength; i++) {
			        if (deletion == studentRecords[i].rollNumber) {
			            // Clear the record
			            studentRecords[i].rollNumber = 0;
			            studentRecords[i].semester = 0;
			            deleted = 1;  // Mark as deleted
			            count--;  // Decrement count after a successful deletion
			            printf("Student record deleted. New count: %u\n", count);
			            break;  // Exit loop after deletion
			        }
			    }

			    if (!deleted) {
			        printf("Input does not match any student\n\n");  // Only print this if no student was deleted
			    }

			    printf("Count is %u at the end of case 3\n", count);  // Final count after case 3
			    break;
			case 0:
				printf("Exiting...\n");
				break;
			default:
				printf("Please input a valid option from the list\n\n");
				break;
		}

	}while(choice != 0);















	return 0;
}


