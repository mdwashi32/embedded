/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

/*
 * 	PINS:
 * 		PD0 - PD3: 0x4002 0C00
 * 		PD8 - PD11: 0x4002 0C00
 * 	CLK ENABLE
 * 		RCC -> AHB1ENR: 0x4002 3800 + 0x30
 * 	MODE
 * 		PD0 - PD3: GPIOxMODER: + 0x00
 * 		PD8 - PD11: ^
 * 	PULL-UP
 * 		PD8 - PD11: GPIOxPUPDR: + 0x0C
 * 	INPUT
 * 		PD8 - PD11: GPIOx_IDR: + 0x10
 * 	OUTPUT
 * 		PD0 - PD3: GPIOx_ODR: + 0x14
 *
 *
 *
 *
 */

int main(void)
{
	uint32_t volatile *const pAhb1_ENR = (uint32_t*)0x40023830;
	uint32_t volatile *const pGpiod_MODE = (uint32_t*)0x40020C00;
	uint32_t volatile *const pGpiod_PUPDR = (uint32_t*)0x40020C0C;
	uint32_t const volatile *const pGpiod_IDR = (uint32_t*)0x40020C10;
	uint32_t volatile *const pGpiod_ODR = (uint32_t*)0x40020C14;
    /* Loop forever */
	for(;;);
}
