/*
 * stm32f407xx_i2c_driver.c
 *
 *  Created on: Jul 22, 2025
 *      Author: mauricewashington
 */

#include "stm32f407xx_i2c_driver.h"

/*
 * Peripheral Clock Setup
 */
/*************************************************************************************************************
 * FUNCTION DETAILS
 * 	@function				-	I2C_PeriClockControl
 *
 * 	@brief					-	This function enables or disables peripheral clock for given I2C peripheral
 *
 * 	@param[in]				-	Base address of I2C peripheral
 * 	@param[in]				-	ENABLE OR DISABLE (macro)
 * 	@param[in]				-
 *
 * 	@return					-	none
 *
 * 	@Note					-	none
 *************************************************************************************************************/
void I2C_PeriClockControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi)
{
	if(EnorDi == ENABLE)
	{
		if(pI2Cx == I2C1)
		{
			I2C1_PCLK_EN();
		}
		else if(pI2Cx == I2C2)
		{
			I2C2_PCLK_EN();
		}
		else if(pI2Cx == I2C3)
		{
			I2C3_PCLK_EN();
		}
	}

	else
	{
		if(pI2Cx == I2C1)
		{
			I2C1_PCLK_DI();
		}
		else if(pI2Cx == I2C2)
		{
			I2C2_PCLK_DI();
		}
		else if(pI2Cx == I2C3)
		{
			I2C3_PCLK_DI();
		}
	}
}

/*
 * Init and De-init (reset)
 */
/*************************************************************************************************************
 * FUNCTION DETAILS
 * 	@function				-	I2C_Init
 *
 * 	@brief					-	This function resets the I2C peripheral
 *
 * 	@param[in]				-	Base address of I2C peripheral
 * 	@param[in]				-
 * 	@param[in]				-
 *
 * 	@return					-	none
 *
 * 	@Note					-	none
 *************************************************************************************************************/


/*************************************************************************************************************
 * FUNCTION DETAILS
 * 	@function				-	I2C_DeInit
 *
 * 	@brief					-	This function resets the given I2C peripheral
 *
 * 	@param[in]				-	Base address of I2C peripheral
 * 	@param[in]				-
 * 	@param[in]				-
 *
 * 	@return					-	none
 *
 * 	@Note					-	none
 *************************************************************************************************************/

void I2C_DeInit(I2C_RegDef_t *pI2Cx)
{
	if(pI2Cx == I2C1)
	{
		I2C1_REG_RESET();
	}
	else if(pI2Cx == I2C2)
	{
		I2C2_REG_RESET();
	}
	else if(pI2Cx == I2C3)
	{
		I2C3_REG_RESET();
	}
}
